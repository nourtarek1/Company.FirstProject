@model IEnumerable<RolesDtos>
@{
    ViewData["Title"] = "Index";
}

<h1>All Roles</h1>

<br />
<br />



<a asp-action="Create" asp-controller="Roles" class="btn btn-primary">Create Roles</a>

<br />
<br />

@if (Model.Count() > 0)
{
    <input type="text" id="SearchInput" placeholder="Search by Name or Phone" class="form-control" />

<div id="searchResults">
        <table class="table table-bordered">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
             
            </tr>
        </thead>
            <tbody id="employeeTableBody">
            @foreach (var item in Model)
            {
                <tr>

                        <td>@item.Id</td>
                        <td>@item.Name</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-warning">Details</a>
                    </td>
                    <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success">Update</a>
                    </td>
                    <td>
                        <form asp-action="Delete" asp-controller="Roles" method="post" onsubmit="return confirm('Are you sure you want to delete this?');">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    </div>

}
else
{
    <div class="mt-4 alert alert-info">
        There Are No Roles :(
    </div>
}

<script>
    document.getElementById("SearchInput").addEventListener("keyup", function() {
        let searchValue = this.value;

        let xhr = new XMLHttpRequest();
        let url = `/Roles/Index?SearchInput=${encodeURIComponent(searchValue)}`;

        xhr.open("GET", url, true);
        xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest"); // Mark as AJAX request

        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
                let parser = new DOMParser();
                let doc = parser.parseFromString(xhr.responseText, "text/html");
                let newTableBody = doc.querySelector("#employeeTableBody");

                if (newTableBody) {
                    document.getElementById("employeeTableBody").innerHTML = newTableBody.innerHTML;
                }
            }
        };

        xhr.send();
    });
</script>
